//
// ItemOfAdd.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ItemOfAdd: Codable, JSONEncodable, Hashable {

    public enum Source: String, Codable, CaseIterable {
        case suggestedoption = "suggestedOption"
        case baicore = "baiCore"
        case currentstate = "currentState"
        case datastore = "dataStore"
    }
    static let idRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^[0-9a-fA-F]{24}$/")
    public var key: String
    public var value: String?
    public var path: String?
    public var ttl: Ttl?
    public var source: Source = .baicore
    public var id: String?

    public init(key: String, value: String? = nil, path: String? = nil, ttl: Ttl? = nil, source: Source = .baicore, id: String? = nil) {
        self.key = key
        self.value = value
        self.path = path
        self.ttl = ttl
        self.source = source
        self.id = id
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case key
        case value
        case path
        case ttl
        case source
        case id = "_id"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(key, forKey: .key)
        try container.encodeIfPresent(value, forKey: .value)
        try container.encodeIfPresent(path, forKey: .path)
        try container.encodeIfPresent(ttl, forKey: .ttl)
        try container.encode(source, forKey: .source)
        try container.encodeIfPresent(id, forKey: .id)
    }
}

