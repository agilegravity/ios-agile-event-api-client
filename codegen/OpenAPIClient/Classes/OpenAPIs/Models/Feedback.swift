//
// Feedback.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Feedback: Codable, JSONEncodable, Hashable {

    public enum ModelClass: String, Codable, CaseIterable {
        case _1 = "1"
        case _0 = "0"
        case 1 = "-1"
    }
    static let idRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^[0-9a-fA-F]{24}$/")
    public var poolId: String?
    public var id: String?
    public var dims: [String]?
    public var value: Double?
    public var _class: ModelClass?
    public var id: String?

    public init(poolId: String? = nil, id: String? = nil, dims: [String]? = nil, value: Double? = nil, _class: ModelClass? = nil, id: String? = nil) {
        self.poolId = poolId
        self.id = id
        self.dims = dims
        self.value = value
        self._class = _class
        self.id = id
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case poolId
        case id
        case dims
        case value
        case _class = "class"
        case id = "_id"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(poolId, forKey: .poolId)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(dims, forKey: .dims)
        try container.encodeIfPresent(value, forKey: .value)
        try container.encodeIfPresent(_class, forKey: ._class)
        try container.encodeIfPresent(id, forKey: .id)
    }
}

